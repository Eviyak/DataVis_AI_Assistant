# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VJdafPVAxfcDEkAfmrep7J3Lrhx3KF5d
"""

import streamlit as st
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import json

st.set_page_config(page_title="üìä AI –í–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä –î–∞–Ω–Ω—ã—Ö", layout="wide")
st.title("üìä AI-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö")
st.markdown("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª (CSV, Excel –∏–ª–∏ JSON) ‚Äî –∏ –ø–æ–ª—É—á–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ + –≥—Ä–∞—Ñ–∏–∫–∏.")

def load_data(uploaded_file):
    try:
        if uploaded_file.name.endswith('.csv'):
            return pd.read_csv(uploaded_file)
        elif uploaded_file.name.endswith(('.xlsx', '.xls')):
            return pd.read_excel(uploaded_file)
        elif uploaded_file.name.endswith('.json'):
            data = json.load(uploaded_file)
            if isinstance(data, list):
                return pd.DataFrame(data)
            else:
                st.error("JSON –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤.")
                return None
        else:
            st.error("–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞")
            return None
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: {e}")
        return None

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª", type=["csv", "xlsx", "xls", "json"])

if uploaded_file:
    df = load_data(uploaded_file)
    if df is not None:
        st.subheader("üîç –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        st.write(f"–°—Ç—Ä–æ–∫: {df.shape[0]}, –ö–æ–ª–æ–Ω–æ–∫: {df.shape[1]}")

        tab1, tab2, tab3 = st.tabs(["–î–∞–Ω–Ω—ã–µ", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è"])

        with tab1:
            st.dataframe(df.head())

        with tab2:
            st.write("–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö:")
            st.write(df.dtypes)
            st.write("–ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:")
            st.write(df.isnull().sum())

        with tab3:
            num_cols = df.select_dtypes(include=["number"]).columns
            if len(num_cols) > 0:
                selected_num = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ–≤—É—é –∫–æ–ª–æ–Ω–∫—É", num_cols)
                fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 4))
                sns.histplot(df[selected_num], ax=ax1, kde=True)
                sns.boxplot(x=df[selected_num], ax=ax2)
                st.pyplot(fig)

            cat_cols = df.select_dtypes(include=["object", "category"]).columns
            if len(cat_cols) > 0:
                selected_cat = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—É—é –∫–æ–ª–æ–Ω–∫—É", cat_cols)
                fig, ax = plt.subplots()
                df[selected_cat].value_counts().plot(kind='bar', ax=ax)
                st.pyplot(fig)
else:
    st.info("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")